{"version":3,"file":"component---src-templates-blog-post-js-c673347882dcfff9d152.js","mappings":"qOAQA,MA4EaA,EAAOC,IAAA,IAAGC,MAAQC,eAAgBC,IAAQH,EAAA,OACrDI,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAClD,EAGJ,UAnFyBC,IAGlB,IAADC,EAAA,IAFJV,MAAM,SAAEW,EAAQ,KAAEC,EAAI,KAAEC,EAAMZ,eAAgBC,GAAM,SACpDY,GACDL,EACC,MAAMM,GAA6B,QAAjBL,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBL,QAAS,QACxCY,GAAQC,EAAAA,EAAAA,GAAShB,EAAKI,YAAYa,YAExC,OACEhB,EAAAA,cAACiB,EAAAA,EAAM,CAACN,SAAUA,EAAUT,MAAOU,GACjCZ,EAAAA,cAAA,WACEkB,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETpB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIkB,UAAU,kBAAkBG,SAAS,YAAYtB,EAAKI,YAAYD,OACtEF,EAAAA,cAAA,SACGD,EAAKI,YAAYmB,KACjB,MACAvB,EAAKwB,OAAOC,cAIhBV,GACCd,EAAAA,cAACyB,EAAAA,EAAW,CACVX,MAAOA,EACPY,IAAK3B,EAAKI,YAAYD,MACtByB,MAAO,CACLC,MAAO,QACPC,MAAO,MACPC,WAAY,OACZC,aAAc,OACdC,aAAc,SAKpBhC,EAAAA,cAAA,WACEiC,wBAAyB,CAAEC,OAAQnC,EAAKoC,MACxCd,SAAS,gBAEXrB,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAACoC,EAAAA,EAAG,QAGRpC,EAAAA,cAAA,OAAKkB,UAAU,iBACblB,EAAAA,cAAA,MACE2B,MAAO,CACLU,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGXzC,EAAAA,cAAA,UACGQ,GACCR,EAAAA,cAAC0C,EAAAA,KAAI,CAACC,GAAInC,EAASe,OAAOqB,KAAMC,IAAI,QAAO,KACtCrC,EAASL,YAAYD,QAI9BF,EAAAA,cAAA,UACGS,GACCT,EAAAA,cAAC0C,EAAAA,KAAI,CAACC,GAAIlC,EAAKc,OAAOqB,KAAMC,IAAI,QAC7BpC,EAAKN,YAAYD,MAAM,SAM3B,C","sources":["webpack://async-stream-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n  const image = getImage(post.frontmatter.coverImage)\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 className=\"blog-post-title\" itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>\n            {post.frontmatter.date}\n            {` • `}\n            {post.fields.readingTime}\n          </p>\n        </header>\n\n        {image && (\n          <GatsbyImage\n            image={image}\n            alt={post.frontmatter.title}\n            style={{\n              float: \"right\",\n              width: \"30%\",\n              marginLeft: \"1rem\",\n              marginBottom: \"1rem\",\n              borderRadius: \"6px\",\n            }}\n          />\n        )}\n\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => (\n  <Seo\n    title={post.frontmatter.title}\n    description={post.frontmatter.description || post.excerpt}\n  />\n)\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        coverImage {\n          childImageSharp {\n            gatsbyImageData(width: 800, layout: CONSTRAINED)\n          }\n        }\n      }\n      fields {\n        readingTime\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","_ref","_site$siteMetadata","previous","next","site","location","siteTitle","siteMetadata","image","getImage","coverImage","Layout","className","itemScope","itemType","itemProp","date","fields","readingTime","GatsbyImage","alt","style","float","width","marginLeft","marginBottom","borderRadius","dangerouslySetInnerHTML","__html","html","Bio","display","flexWrap","justifyContent","listStyle","padding","Link","to","slug","rel"],"sourceRoot":""}