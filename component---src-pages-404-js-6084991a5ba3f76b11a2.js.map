{"version":3,"file":"component---src-pages-404-js-6084991a5ba3f76b11a2.js","mappings":"uMAMA,MAWaA,EAAOA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,mBAErC,UAbqBC,IAAwB,IAAvB,KAAEC,EAAI,SAAEC,GAAUF,EACtC,MAAMG,EAAYF,EAAKG,KAAKC,aAAaN,MAEzC,OACEF,EAAAA,cAACS,EAAAA,EAAM,CAACJ,SAAUA,EAAUH,MAAOI,GACjCN,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DACI,C,+CCuBb,IA/BeG,IAAmB,IAAlB,SAAEO,GAAUP,EAC1B,OACEH,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKW,UAAU,eACbX,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAG,KACPb,EAAAA,cAAA,OACEc,KAAKC,EAAAA,EAAAA,YAAW,wBAChBC,IAAI,sBACJL,UAAU,iBAGdX,EAAAA,cAAA,OAAKW,UAAU,kBACbX,EAAAA,cAAA,OAAKW,UAAU,iBACbX,EAAAA,cAAA,OAAKW,UAAU,YACbX,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAG,KAAI,QACbb,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAG,UAAS,SAClBb,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAG,YAAW,eAK5Bb,EAAAA,cAAA,OAAKW,UAAU,aACZD,GAEHV,EAAAA,cAAA,UAAQW,UAAU,eAAc,MACtB,IAAIM,MAAOC,cAAc,gDAElC,C,+CCiBP,IAvCYf,IAAuC,IAADgB,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAEpB,EAAK,SAAEQ,GAAUP,EAC3C,MAAM,KAAEI,IAASgB,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBF,GAAef,EAAKC,aAAac,YACnDG,EAAgC,QAApBN,EAAGZ,EAAKC,oBAAY,IAAAW,OAAA,EAAjBA,EAAmBjB,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQyB,EAAe,GAAGvB,OAAWuB,IAAiBvB,GACtDF,EAAAA,cAAA,QAAM0B,KAAK,cAAcC,QAASH,IAClCxB,EAAAA,cAAA,QAAM4B,SAAS,WAAWD,QAASzB,IACnCF,EAAAA,cAAA,QAAM4B,SAAS,iBAAiBD,QAASH,IACzCxB,EAAAA,cAAA,QAAM4B,SAAS,UAAUD,QAAQ,YACjC3B,EAAAA,cAAA,QAAM0B,KAAK,eAAeC,QAAQ,YAClC3B,EAAAA,cAAA,QACE0B,KAAK,kBACLC,SAA0B,QAAjBP,EAAAb,EAAKC,oBAAY,IAAAY,GAAQ,QAARC,EAAjBD,EAAmBS,cAAM,IAAAR,OAAR,EAAjBA,EAA2BS,UAAW,KAEjD9B,EAAAA,cAAA,QAAM0B,KAAK,gBAAgBC,QAASzB,IACpCF,EAAAA,cAAA,QAAM0B,KAAK,sBAAsBC,QAASH,IACzCd,EACA,C","sources":["webpack://async-stream-blog/./src/pages/404.js","webpack://async-stream-blog/./src/components/layout.js","webpack://async-stream-blog/./src/components/seo.js"],"sourcesContent":["import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { withPrefix } from \"gatsby\";  // Add this import\nimport \"../styles/global.css\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <div className=\"banner-hero\">\n        <Link to=\"/\">\n          <img\n            src={withPrefix(\"img/async-banner.svg\")}  // Use withPrefix\n            alt=\"Async Stream Banner\"\n            className=\"site-banner\"\n          />\n        </Link>\n        <div className=\"banner-overlay\">\n          <div className=\"banner-header\">\n            <nav className=\"site-nav\">\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/about\">About</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </nav>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        {children}\n      </div>\n      <footer className=\"site-footer\">\n        &copy; {new Date().getFullYear()} Joseph M. Hellerstein. All rights reserved.\n      </footer>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","siteTitle","site","siteMetadata","Layout","children","className","Link","to","src","withPrefix","alt","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","useStaticQuery","metaDescription","defaultTitle","name","content","property","social","twitter"],"sourceRoot":""}