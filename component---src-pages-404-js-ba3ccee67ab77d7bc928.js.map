{"version":3,"file":"component---src-pages-404-js-ba3ccee67ab77d7bc928.js","mappings":"mLA6BA,MA3BoB,KAClB,MAAM,EAACA,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,UAEnCC,EAAAA,EAAAA,YAAU,KACR,MACMC,EADaC,aAAaC,QAAQ,WACJC,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,SACzGR,EAASG,GACTM,SAASC,gBAAgBC,aAAa,aAAcR,EAAa,GAChE,IASH,OACE,uBAAKS,UAAU,0BACb,yBAAOA,UAAU,gBACf,yBAAOC,KAAK,WAAWC,QAAmB,SAAVf,EAAkBgB,SAVpC,KAClB,MAAMC,EAAqB,UAAVjB,EAAoB,OAAS,QAC9CC,EAASgB,GACTZ,aAAaa,QAAQ,QAASD,GAC9BP,SAASC,gBAAgBC,aAAa,aAAcK,EAAS,IAOzD,wBAAMJ,UAAU,YAEd,ECSV,MA9Be,IAAoC,IAAnC,SAAEM,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EADcC,WACDJ,EAASK,SAEtBC,EACJ,uBAAKZ,UAAU,UACZS,EACC,sBAAIT,UAAU,2BACZ,gBAAC,EAAAa,KAAI,CAACC,GAAG,KAAKP,IAGhB,gBAAC,EAAAM,KAAI,CAACb,UAAU,8BAA8Bc,GAAG,KAC9CP,GAGL,gBAAC,EAAW,OAIhB,OACE,uBAAKP,UAAU,iBAAiB,oBAAmBS,GACjD,0BAAQT,UAAU,iBAAiBY,GACnC,4BAAOJ,GACP,8BAAQ,MACH,IAAIO,MAAOC,cAAc,gBAAa,qBAAGC,KAAK,4BAA2B,WAE1E,C,+CCmBV,IAvCY,IAAuC,IAAD,UAArC,YAAEC,EAAW,MAAEX,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEW,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBf,MAExC,OACE,gCACE,6BAAQgB,EAAkBhB,EAAK,MAAMgB,EAAiBhB,GACtD,wBAAMiB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASlB,IACnC,wBAAMmB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASlB,IACpC,wBAAMiB,KAAK,sBAAsBC,QAASJ,IACzCb,EACA,C,kGCvCP,MAWaqB,EAAO,IAAM,gBAAC,IAAG,CAACtB,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAEuB,EAAI,SAAExB,GAAU,EACtC,MAAMyB,EAAYD,EAAKX,KAAKG,aAAaf,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAOwB,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://async-stream-blog/./src/components/ThemeToggle.js","webpack://async-stream-blog/./src/components/layout.js","webpack://async-stream-blog/./src/components/seo.js","webpack://async-stream-blog/./src/pages/404.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst ThemeToggle = () => {\n  const [theme, setTheme] = useState(\"light\");\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem(\"theme\");\n    const initialTheme = savedTheme || (window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\");\n    setTheme(initialTheme);\n    document.documentElement.setAttribute(\"data-theme\", initialTheme);\n  }, []);\n\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    localStorage.setItem(\"theme\", newTheme);\n    document.documentElement.setAttribute(\"data-theme\", newTheme);\n  };\n\n  return (\n    <div className=\"theme-toggle-container\">\n      <label className=\"theme-switch\">\n        <input type=\"checkbox\" checked={theme === \"dark\"} onChange={toggleTheme} />\n        <span className=\"slider\" />\n      </label>\n    </div>\n  );\n};\n\nexport default ThemeToggle;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport ThemeToggle from \"./ThemeToggle\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  const header = (\n    <div className=\"banner\">\n      {isRootPath ? (\n        <h1 className=\"site-title main-heading\">\n          <Link to=\"/\">{title}</Link>\n        </h1>\n      ) : (\n        <Link className=\"site-title header-link-home\" to=\"/\">\n          {title}\n        </Link>\n      )}\n      <ThemeToggle />\n    </div>\n  )\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["theme","setTheme","useState","useEffect","initialTheme","localStorage","getItem","window","matchMedia","matches","document","documentElement","setAttribute","className","type","checked","onChange","newTheme","setItem","location","title","children","isRootPath","__PATH_PREFIX__","pathname","header","Link","to","Date","getFullYear","href","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","data","siteTitle"],"sourceRoot":""}