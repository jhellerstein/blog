{"version":3,"file":"component---src-pages-about-js-f7aaa686cb5f70485c81.js","mappings":"mJAuCA,IAlCeA,IAAmB,IAAlB,SAAEC,GAAUD,EACS,oBAAXE,QAAyBA,OAAOC,SAASC,SAGjE,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KACPH,EAAAA,cAAA,OACEI,KAAKC,EAAAA,EAAAA,YAAW,wBAChBC,IAAI,sBACJL,UAAU,iBAGdD,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KAAI,QACbH,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,UAAS,SAClBH,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,YAAW,eAK5BH,EAAAA,cAAA,OAAKC,UAAU,aACZL,GAEHI,EAAAA,cAAA,UAAQC,UAAU,eAAc,MACtB,IAAIM,MAAOC,cAAc,uCAElC,C,+CCcP,IAvCYb,IAAuC,IAADc,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAEC,EAAK,SAAEjB,GAAUD,EAC3C,MAAM,KAAEmB,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBI,MAExC,OACEb,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQkB,EAAe,GAAGL,OAAWK,IAAiBL,GACtDb,EAAAA,cAAA,QAAMmB,KAAK,cAAcC,QAASJ,IAClChB,EAAAA,cAAA,QAAMqB,SAAS,WAAWD,QAASP,IACnCb,EAAAA,cAAA,QAAMqB,SAAS,iBAAiBD,QAASJ,IACzChB,EAAAA,cAAA,QAAMqB,SAAS,UAAUD,QAAQ,YACjCpB,EAAAA,cAAA,QAAMmB,KAAK,eAAeC,QAAQ,YAClCpB,EAAAA,cAAA,QACEmB,KAAK,kBACLC,SAA0B,QAAjBV,EAAAI,EAAKG,oBAAY,IAAAP,GAAQ,QAARC,EAAjBD,EAAmBY,cAAM,IAAAX,OAAR,EAAjBA,EAA2BY,UAAW,KAEjDvB,EAAAA,cAAA,QAAMmB,KAAK,gBAAgBC,QAASP,IACpCb,EAAAA,cAAA,QAAMmB,KAAK,sBAAsBC,QAASJ,IACzCpB,EACA,C,gECTP,UAhCkB4B,IAEdxB,EAAAA,cAACyB,EAAAA,EAAM,KACLzB,EAAAA,cAAC0B,EAAAA,EAAG,CAACb,MAAM,UACXb,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,SAAG,0RAKkDA,EAAAA,cAAA,KAAG2B,KAAK,qBAAoB,SAAS,6DAG1F3B,EAAAA,cAAA,SAAG,4FAEMA,EAAAA,cAAA,KAAG2B,KAAK,sBAAqB,UAAW,KAAC3B,EAAAA,cAAA,KAAG2B,KAAK,0CAAyC,YAAa,SACxG3B,EAAAA,cAAA,KAAG2B,KAAK,2CAA0C,aAAc,uEAGxE3B,EAAAA,cAAA,SAAG,wEAECA,EAAAA,cAAA,kBAAY,6MAEC,qF","sources":["webpack://async-stream-blog/./src/components/layout.js","webpack://async-stream-blog/./src/components/seo.js","webpack://async-stream-blog/./src/pages/about.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { withPrefix } from \"gatsby\";  // Add this import\nimport \"../styles/global.css\";\n\nconst Layout = ({ children }) => {\n  const location = typeof window !== \"undefined\" ? window.location.pathname : \"\";\n  const isHome = location === \"/\" || location === \"/blog/\" || location === \"/blog\";\n\n  return (\n    <>\n      <div className=\"banner-hero\">\n        <Link to=\"/\">\n          <img\n            src={withPrefix(\"img/async-banner.svg\")}  // Use withPrefix\n            alt=\"Async Stream Banner\"\n            className=\"site-banner\"\n          />\n        </Link>\n        <div className=\"banner-overlay\">\n          <div className=\"banner-header\">\n            <nav className=\"site-nav\">\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/about\">About</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </nav>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        {children}\n      </div>\n      <footer className=\"site-footer\">\n        &copy; {new Date().getFullYear()} Async Stream. All rights reserved.\n      </footer>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst AboutPage = () => {\n  return (\n    <Layout>\n      <Seo title=\"About\" />\n      <div className=\"content\">\n        <h1>About</h1>\n        <p>\n          I work as a computer scientist at UC Berkeley. I\n          focus on data-centric systems and their central role in computing.\n          I came up as a database systems researcher, but \n          in recent years I've been particularly focused on the design of \n          programming languages for distributed systems (e.g <a href=\"https://hydro.run\">Hydro</a>),\n          which can benefit enormously from a data-centric lens.\n        </p>\n        <p>\n            I like to ground my work in real-world efforts, including startups I've helped lead\n            like <a href=\"https://runllm.com\">RunLLM</a>, <a href=\"https://en.wikipedia.org/wiki/Trifacta\">Trifacta</a>,\n            and <a href=\"https://en.wikipedia.org/wiki/Greenplum\">Greenplum</a>, \n            as well as established companies I've worked with over the years.\n        </p>\n        <p>\n            I'm also a lifelong student of the trumpet. To quote Dizzy Gillespie, \n            <blockquote>Some days you get up and put the horn to your chops and it sounds pretty good and you win. \n            Some days you try and nothing works and the horn wins. This goes on and on and then you die and the horn wins.\n            </blockquote>\n            Humility and a lack of control, baked into a daily practice. Highly recommended!\n        </p>\n      </div>\n    </Layout>\n  )\n}\n\nexport default AboutPage"],"names":["_ref","children","window","location","pathname","React","className","Link","to","src","withPrefix","alt","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","AboutPage","Layout","Seo","href"],"sourceRoot":""}