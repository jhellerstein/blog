"use strict";(self.webpackChunkasync_stream_blog=self.webpackChunkasync_stream_blog||[]).push([[363],{6163:function(e,a,t){t.d(a,{A:function(){return c}});var n=t(6540),s=t(4848);function l({id:e,host:a,repo:l,repoId:c,category:m,categoryId:r,mapping:o,term:i,strict:p,reactionsEnabled:u,emitMetadata:h,inputPosition:E,theme:d,lang:g,loading:y}){const[k,f]=(0,n.useState)(!1);return(0,n.useEffect)((()=>{k||t.e(416).then(t.bind(t,416)).then((()=>f(!0)))}),[]),k?(0,s.jsx)("giscus-widget",{id:e,host:a,repo:l,repoid:c,category:m,categoryid:r,mapping:o,term:i,strict:p,reactionsenabled:u,emitmetadata:h,inputposition:E,theme:d,lang:g,loading:y}):null}var c=()=>n.createElement("div",{className:"comments-wrapper"},n.createElement(l,{repo:"jhellerstein/blog",repoId:"R_kgDOOlLShQ",category:"Comments",categoryId:"DIC_kwDOOlLShc4CqUp7",mapping:"pathname",term:"Welcome to the async stream blog.",strict:"0",reactionsEnabled:"1",emitMetadata:"0",inputPosition:"bottom",theme:"light",lang:"en",loading:"lazy",crossOrigin:"anonymous",async:!0}))},9381:function(e,a,t){t.r(a),t.d(a,{Head:function(){return d},default:function(){return g}});var n=t(8453),s=t(6540),l=t(33),c=t(4794);function m(e){const a=Object.assign({p:"p",em:"em",span:"span",strong:"strong",blockquote:"blockquote",a:"a",hr:"hr",h2:"h2",ol:"ol",li:"li",div:"div",math:"math",semantics:"semantics",mrow:"mrow",mi:"mi",mtext:"mtext",mo:"mo",annotation:"annotation",h3:"h3",h4:"h4",ul:"ul",br:"br"},(0,n.RP)(),e.components);return s.createElement(s.Fragment,null,s.createElement(a.p,null,"Ever used a CRDT, thought you were safe, and—boom—you bought a Ferrari you didn't mean to? It could happen to you!"),"\n",s.createElement(a.p,null,"The truth is that CRDTs are dangerous to observe: they\nguarantee ",s.createElement(a.em,null,"eventual consistency"),', but you\'ll never know when "eventual" arrives.\nThat gap between what CRDTs promise and what you can safely ',s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," is generally not\nwell protected in CRDT libraries, and it's exactly where the bugs sneak in.\n",s.createElement(a.strong,null,"It is not safe to ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," a CRDT's raw state, people!")),"\n",s.createElement(a.p,null,"What CRDTs ",s.createElement(a.em,null,"can")," offer—",s.createElement(a.em,null,"when used properly!"),"—is ",s.createElement(a.strong,null,"monotonicity"),":\nthe guarantee that once you've seen a fact, no future update will contradict it.\nAnd that's a powerful basis for providing safe APIs to your CRDTs."),"\n",s.createElement(a.blockquote,null,"\n",s.createElement(a.p,null,"This is the 3rd post in a ",s.createElement(a.a,{href:"../crdt-intro/"},"series")," I'm doing on CRDTs. This one is particularly for you software engineers out there.\nNews you can use."),"\n"),"\n",s.createElement(a.hr),"\n",s.createElement(a.h2,null,"Takeaways"),"\n",s.createElement(l.A,{type:"danger"},s.createElement(a.p,null,s.createElement(a.strong,null,"Look not at the naked state of thy CRDT!")," Encapsulate it, and break that encapsulation\ncautiously ...with plenty of code review and comments!")),"\n",s.createElement(l.A,{type:"warning"},s.createElement(a.p,null,s.createElement(a.strong,null,"You will never experience eventuality"),". Eventual consistency is an abstract concept, not a guarantee you can count on.")),"\n",s.createElement(l.A,{type:"success"},s.createElement(a.p,null,s.createElement(a.strong,null,"All is not lost!"),"\nThe monotonicity of many CRDTs can help, especially via ",s.createElement(a.a,{href:"#threshold-functions"},"threshold functions"),"."),s.createElement(a.p,null,"In general, you'll need coordination to know when you're done—use it, sparingly and strategically.")),"\n",s.createElement(l.A,{type:"info"},s.createElement(a.p,null,"See the ",s.createElement(a.a,{href:"#survival-guide"},"CRDT Survival Guide")," at the end of the post!")),"\n",s.createElement(a.hr),"\n",s.createElement(a.h2,null,"Prologue: ‟Eventual Consistency”"),"\n",s.createElement(a.p,null,'Have you ever asked that age-old question, "Are we there yet?" Eventual consistency promises you\'ll eventually get to an agreed-upon value across replicas... but when is "eventual"? Tomorrow? Next year? After you\'ve bought a Ferrari you didn\'t mean to?'),"\n",s.createElement(a.p,null,"Werner Vogels ",s.createElement(a.a,{href:"https://dl.acm.org/doi/10.1145/1435417.1435432"},"defined eventual consistency like this"),":"),"\n",s.createElement(a.blockquote,null,"\n",s.createElement(a.p,null,s.createElement(a.em,null,"If no new updates are made to the object, eventually all accesses will return the last updated value.")),"\n"),"\n",s.createElement(a.p,null,"Sounds reassuring, right? And it avoids expensive coordination protocols like Paxos or Two-Phase Commit."),"\n",s.createElement(a.p,null,"But here's the catch: ",s.createElement(a.em,null,"How do you know there are no new updates?"),'\nIn distributed systems, termination detection (i.e. "am I done yet?") requires knowing:'),"\n",s.createElement(a.ol,null,"\n",s.createElement(a.li,null,s.createElement(a.strong,null,"No node")," will issue any new messages."),"\n",s.createElement(a.li,null,s.createElement(a.strong,null,"No messages")," are in flight."),"\n"),"\n",s.createElement(a.p,null,"In logic, that's:"),"\n",s.createElement(a.div,{className:"math math-display"},s.createElement(a.span,{className:"katex-display"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,{mathvariant:"normal"},"¬"),s.createElement(a.mi,{mathvariant:"normal"},"∃"),s.createElement(a.mi,null,"n"),s.createElement(a.mtext,null,"  "),s.createElement(a.mo,{stretchy:"false"},"("),s.createElement(a.mi,null,"p"),s.createElement(a.mo,{stretchy:"false"},"("),s.createElement(a.mi,null,"n"),s.createElement(a.mo,{stretchy:"false"},")"),s.createElement(a.mo,{stretchy:"false"},")")),s.createElement(a.annotation,{encoding:"application/x-tex"},"\\neg\\exists n  \\; (p(n))")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),s.createElement(a.span,{className:"mord"},"¬∃"),s.createElement(a.span,{className:"mord mathnormal"},"n"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mopen"},"("),s.createElement(a.span,{className:"mord mathnormal"},"p"),s.createElement(a.span,{className:"mopen"},"("),s.createElement(a.span,{className:"mord mathnormal"},"n"),s.createElement(a.span,{className:"mclose"},"))")))))),"\n",s.createElement(a.p,null,'"there does not exist an ',s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"n")),s.createElement(a.annotation,{encoding:"application/x-tex"},"n")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.4306em"}}),s.createElement(a.span,{className:"mord mathnormal"},"n")))))," where property ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"p"),s.createElement(a.mo,{stretchy:"false"},"("),s.createElement(a.mi,null,"n"),s.createElement(a.mo,{stretchy:"false"},")")),s.createElement(a.annotation,{encoding:"application/x-tex"},"p(n)")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),s.createElement(a.span,{className:"mord mathnormal"},"p"),s.createElement(a.span,{className:"mopen"},"("),s.createElement(a.span,{className:"mord mathnormal"},"n"),s.createElement(a.span,{className:"mclose"},")"))))),' holds".'),"\n",s.createElement(a.p,null,"Any time you see a ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,{mathvariant:"normal"},"¬"),s.createElement(a.mi,{mathvariant:"normal"},"∃")),s.createElement(a.annotation,{encoding:"application/x-tex"},"\\neg\\exists")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6944em"}}),s.createElement(a.span,{className:"mord"},"¬∃")))))," (or its doppelganger, ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,{mathvariant:"normal"},"∀")),s.createElement(a.annotation,{encoding:"application/x-tex"},"\\forall")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6944em"}}),s.createElement(a.span,{className:"mord"},"∀"))))),") in distributed logic, ",s.createElement(a.em,null,"beware!")," One rogue message — ",s.createElement(a.em,null,"a single counter-example")," — can arrive at any time to invalidate the property."),"\n",s.createElement(a.p,null,"👉 ",s.createElement(a.strong,null,'Termination ("eventuality") is non-monotonic'),". It can be true over a certain set of information, but become false if more data arrives."),"\n",s.createElement(a.p,null,"The ",s.createElement(a.a,{href:"https://cacm.acm.org/research/keeping-calm/"},"CALM Theorem")," says that eventual consistency without coordination is possible ",s.createElement(a.em,null,"if and only if")," the program specification is monotonic. Thus (via CALM):"),"\n",s.createElement(a.p,null,"👉 ",s.createElement(a.strong,null,"Termination Detection requires Coordination"),"."),"\n",s.createElement(a.p,null,'So ... in coordination-free systems, you can never know when "eventual" has arrived!'),"\n",s.createElement("details",null,s.createElement("summary",null,"Click for a review of monotonicity."),s.createElement(a.p,null,"Given a function ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"f"),s.createElement(a.mo,null,":"),s.createElement(a.mi,null,"S"),s.createElement(a.mo,null,"→"),s.createElement(a.mi,null,"T")),s.createElement(a.annotation,{encoding:"application/x-tex"},"f:S \\rightarrow T")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mrel"},":"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}})),s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6833em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mrel"},"→"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}})),s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6833em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"}},"T"))))),", where ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"S")),s.createElement(a.annotation,{encoding:"application/x-tex"},"S")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6833em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S")))))," and ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"T")),s.createElement(a.annotation,{encoding:"application/x-tex"},"T")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6833em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"}},"T")))))," are ordered domains, we say that ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"f")),s.createElement(a.annotation,{encoding:"application/x-tex"},"f")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f")))))," is ",s.createElement(a.strong,null,"monotone")," (or ",s.createElement(a.strong,null,"monotonic"),") if:"),s.createElement(a.div,{className:"math math-display"},s.createElement(a.span,{className:"katex-display"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"x"),s.createElement(a.mo,null,"≤"),s.createElement(a.mi,null,"y"),s.createElement(a.mtext,null,"  "),s.createElement(a.mo,null,"⟹"),s.createElement(a.mtext,null,"  "),s.createElement(a.mi,null,"f"),s.createElement(a.mo,{stretchy:"false"},"("),s.createElement(a.mi,null,"x"),s.createElement(a.mo,{stretchy:"false"},")"),s.createElement(a.mo,null,"≤"),s.createElement(a.mi,null,"f"),s.createElement(a.mo,{stretchy:"false"},"("),s.createElement(a.mi,null,"y"),s.createElement(a.mo,{stretchy:"false"},")")),s.createElement(a.annotation,{encoding:"application/x-tex"},"x \\le y \\implies f(x) \\le f(y)")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.7719em",verticalAlign:"-0.136em"}}),s.createElement(a.span,{className:"mord mathnormal"},"x"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mrel"},"≤"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}})),s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.7194em",verticalAlign:"-0.1944em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mrel"},"⟹"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}})),s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),s.createElement(a.span,{className:"mopen"},"("),s.createElement(a.span,{className:"mord mathnormal"},"x"),s.createElement(a.span,{className:"mclose"},")"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mrel"},"≤"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}})),s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),s.createElement(a.span,{className:"mopen"},"("),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),s.createElement(a.span,{className:"mclose"},")")))))),s.createElement(a.p,null,"Intuitively, a monotone function ",s.createElement(a.em,null,"preserves order"),': it guarantees that if the input gets "bigger", then the output gets no smaller.'),s.createElement(a.p,null,"Monotonicity is often used in logic, where our domains ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"S")),s.createElement(a.annotation,{encoding:"application/x-tex"},"S")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6833em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S")))))," and ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"T")),s.createElement(a.annotation,{encoding:"application/x-tex"},"T")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6833em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"}},"T")))))," contain sets of facts. Given an input set ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"x")),s.createElement(a.annotation,{encoding:"application/x-tex"},"x")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.4306em"}}),s.createElement(a.span,{className:"mord mathnormal"},"x"))))),", a logical function ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"f")),s.createElement(a.annotation,{encoding:"application/x-tex"},"f")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f")))))," produces a set of ",s.createElement(a.em,null,"conclusions"),", ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"f"),s.createElement(a.mo,{stretchy:"false"},"("),s.createElement(a.mi,null,"x"),s.createElement(a.mo,{stretchy:"false"},")")),s.createElement(a.annotation,{encoding:"application/x-tex"},"f(x)")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),s.createElement(a.span,{className:"mopen"},"("),s.createElement(a.span,{className:"mord mathnormal"},"x"),s.createElement(a.span,{className:"mclose"},")"))))),". If ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"f")),s.createElement(a.annotation,{encoding:"application/x-tex"},"f")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f")))))," is monotone, ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"x"),s.createElement(a.mo,null,"⊆"),s.createElement(a.mi,null,"y"),s.createElement(a.mtext,null,"  "),s.createElement(a.mo,null,"⟹"),s.createElement(a.mtext,null,"  "),s.createElement(a.mi,null,"f"),s.createElement(a.mo,{stretchy:"false"},"("),s.createElement(a.mi,null,"x"),s.createElement(a.mo,{stretchy:"false"},")"),s.createElement(a.mo,null,"⊆"),s.createElement(a.mi,null,"f"),s.createElement(a.mo,{stretchy:"false"},"("),s.createElement(a.mi,null,"y"),s.createElement(a.mo,{stretchy:"false"},")")),s.createElement(a.annotation,{encoding:"application/x-tex"},"x \\subseteq y \\implies f(x) \\subseteq f(y)")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.7719em",verticalAlign:"-0.136em"}}),s.createElement(a.span,{className:"mord mathnormal"},"x"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mrel"},"⊆"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}})),s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.7194em",verticalAlign:"-0.1944em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mrel"},"⟹"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}})),s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),s.createElement(a.span,{className:"mopen"},"("),s.createElement(a.span,{className:"mord mathnormal"},"x"),s.createElement(a.span,{className:"mclose"},")"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),s.createElement(a.span,{className:"mrel"},"⊆"),s.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}})),s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),s.createElement(a.span,{className:"mopen"},"("),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),s.createElement(a.span,{className:"mclose"},")"))))),": that is, ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"f"),s.createElement(a.mo,{stretchy:"false"},"("),s.createElement(a.mi,null,"y"),s.createElement(a.mo,{stretchy:"false"},")")),s.createElement(a.annotation,{encoding:"application/x-tex"},"f(y)")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),s.createElement(a.span,{className:"mopen"},"("),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),s.createElement(a.span,{className:"mclose"},")")))))," contains all the facts in ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"f"),s.createElement(a.mo,{stretchy:"false"},"("),s.createElement(a.mi,null,"x"),s.createElement(a.mo,{stretchy:"false"},")")),s.createElement(a.annotation,{encoding:"application/x-tex"},"f(x)")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),s.createElement(a.span,{className:"mopen"},"("),s.createElement(a.span,{className:"mord mathnormal"},"x"),s.createElement(a.span,{className:"mclose"},")")))))," and perhaps more."),s.createElement(a.p,null,"In practical terms, if we think of ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,null,"f")),s.createElement(a.annotation,{encoding:"application/x-tex"},"f")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),s.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f")))))," as a process running over a growing stream of facts, we can say this: ",s.createElement(a.em,null,"once an output fact is concluded by a monotone function, additional input facts will not invalidate that conclusion"),"."),s.createElement(a.p,null,"You can see why this is useful in a distributed system!"),s.createElement(a.ol,null,"\n",s.createElement(a.li,null,"Monotone functions allow for correct, wait-free, streaming computation."),"\n",s.createElement(a.li,null,"For logical monotone functions, the truth of each conclusion is invariant in the face of additional input."),"\n")),"\n",s.createElement(a.hr),"\n",s.createElement(a.h2,null,'🙋🏾‍♂️ Is Anything Safe Before ‟Eventual" comes?'),"\n",s.createElement(l.A,{type:"danger"},s.createElement(a.p,null,"In general, no! The state of a CRDT could be incomplete and may change.")),"\n",s.createElement(a.p,null,"This is a common misunderstanding. It's easy to confuse the formal guarantees of ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">merge</code>'}})," (which CRDTs provide) with the safety of ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}}),"s (which they absolutely do not)."),"\n",s.createElement(a.p,null,"If you previously missed this, you are in good company. The danger of ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," is not prominent in online discussion, software packages, or the CRDT literature. Perhaps this post can serve as a warning and a pointer to more subtle discussion in the literature."),"\n",s.createElement(a.p,null,"Let's illustrate the problem—and ways to use CRDTs responsibly."),"\n",s.createElement(a.hr),"\n",s.createElement(a.h3,null,"🚨 Two-Phase Sets: Poster Child of the Problem"),"\n",s.createElement(a.p,null,"A 2-Phase (Add/Remove) Set CRDT maintains two sets:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="rust"><pre class="language-rust"><code class="language-rust"><span class="token keyword">struct</span> <span class="token type-definition class-name">2PSet</span> <span class="token punctuation">{</span>\n    adds<span class="token punctuation">:</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token operator">></span><span class="token punctuation">;</span>\n    removes<span class="token punctuation">:</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token operator">></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"Merges? Safe—just union both sets."),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="rust"><pre class="language-rust"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function-definition function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> <span class="token operator">&amp;</span>2PSet<span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token operator">&amp;</span>2PSet<span class="token punctuation">)</span> <span class="token punctuation">-></span> 2PSet <span class="token punctuation">{</span>\n  2PSet <span class="token punctuation">{</span>\n    adds<span class="token punctuation">:</span> a<span class="token punctuation">.</span>adds<span class="token punctuation">.</span><span class="token keyword">union</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">.</span>adds<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    removes<span class="token punctuation">:</span> a<span class="token punctuation">.</span>removes<span class="token punctuation">.</span><span class="token keyword">union</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">.</span>removes<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"But the ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}}),"?"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="rust"><pre class="language-rust"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function-definition function">read</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span>2PSet<span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token class-name">Set</span><span class="token operator">&lt;</span>element<span class="token operator">></span> <span class="token punctuation">{</span>\n  s<span class="token punctuation">.</span>adds <span class="token operator">-</span> s<span class="token punctuation">.</span>removes\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"This ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," is ",s.createElement(a.strong,null,"non-monotonic"),": as ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">removes</code>'}})," grows, your ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," result ",s.createElement(a.em,null,"shrinks"),". That's the trap."),"\n",s.createElement(a.p,null,"So what could go wrong?"),"\n",s.createElement(a.h4,null,"🥔 🏎️ The Potato/Ferrari Example"),"\n",s.createElement("div",{className:"diagram-float"},s.createElement("img",{src:(0,c.withPrefix)("/img/ferrari-diagonal.svg"),alt:"CRDT Ferrari Sequence Diagram",style:{width:"85%",display:"block"}})),"\n",s.createElement(a.p,null,"Here's an example of what could go wrong, from our ",s.createElement(a.a,{href:"https://www.vldb.org/pvldb/vol16/p856-power.pdf"},"Keep CALM and CRDT On"),"  paper:"),"\n",s.createElement(a.blockquote,null,"\n",s.createElement(a.p,null,"While shopping online at RetailCo, you add a potato and a Ferrari to your cart. Reflecting on your finances, you decide to remove the Ferrari, and check out.",s.createElement("br")),"\n"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="rust"><pre class="language-rust"><code class="language-rust">cart<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"potato"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ncart<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Ferrari"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ncart<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"Ferrari"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ncart<span class="token punctuation">.</span><span class="token function">checkout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"The CRDT-based cart is replicated, and unfortunately replica ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">B</code>'}})," receives ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">checkout</code>'}})," before ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">remove</code>'}}),". It ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}}),"s the cart, and ships you a Ferrari. Boom. ",s.createElement("br")),"\n",s.createElement(a.p,null,"👉 ",s.createElement(a.strong,null,"Merges are safe; reads are not.")," 2P-Sets? Nearly useless for safe reads."),"\n",s.createElement(a.h3,null,"What about Simpler CRDTs?"),"\n",s.createElement(a.p,null,"You might be saying:"),"\n",s.createElement(a.p,null,s.createElement(a.em,null,"Well, 2P-sets use a ",s.createElement(a.em,null,"set difference")," operator, which is clearly non-monotonic. The CALM Theorem warned us that non-monotonic operations require coordination for consistency!\nBut surely a plain old grow-only set is safe to read? After all, its ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," function looks nice and monotonic!")),"\n",s.createElement("div",{className:"diagram-float"},s.createElement("img",{src:(0,c.withPrefix)("/img/ingredients.svg"),alt:"CRDT Ingredient Sequence Diagram",style:{width:"100%",display:"block"}})),"\n",s.createElement(a.p,null,"You'd be right that the ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," is monotonic:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="rust"><pre class="language-rust"><code class="language-rust"><span class="token function">read</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token class-name">GrowOnlySet</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token class-name">Set</span> <span class="token punctuation">{</span>\n  s<span class="token punctuation">.</span>adds\n<span class="token punctuation">}</span>\n<span class="token punctuation">...</span>\n<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token class-name">GrowOnlySet</span><span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"And that seems safe locally. But wait until you see the downstream logic:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="rust"><pre class="language-rust"><code class="language-rust"><span class="token keyword">let</span> ingredients <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token function">edible</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ingredients<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">cook</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ingredients<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n  <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">"InedibleError"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"Both replicas start out empty—I think we can all agree that the empty set is inedible.\nBut imagine replica ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">A</code>'}})," merges some yummy stuff:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="rust"><pre class="language-rust"><code class="language-rust">c<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token lifetime-annotation symbol">\'apples</span>\'<span class="token punctuation">,</span> <span class="token lifetime-annotation symbol">\'honey</span>\'<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"We transition from ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">!edible</code>'}})," to ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">edible</code>'}}),"."),"\n",s.createElement(a.p,null,"Now suppose replica ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">B</code>'}})," merges some more stuff:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="rust"><pre class="language-rust"><code class="language-rust">c<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token lifetime-annotation symbol">\'bleach</span>\'<span class="token punctuation">,</span> <span class="token lifetime-annotation symbol">\'Paxos</span>\'<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"Bleach and Paxos both have their uses, but please dont ingest them!  Merging in more stuff transitions replica ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">A</code>'}})," back from ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">edible</code>'}})," to ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">!edible</code>'}}),".\nEven though ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">c</code>'}})," grows monotonically, ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">edible</code>'}})," is not a monotone function over ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">c</code>'}}),",\nso the result of ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">edible(c)</code>'}})," toggles from false to true to false at node ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">A</code>'}}),"!"),"\n",s.createElement(a.p,null,"👉 ",s.createElement(a.strong,null,"The general point: even monotonic ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}}),"s can lead to non-monotonic conclusions in downstream code.")),"\n",s.createElement(a.p,null,"This seems like pretty bad news! But all is not lost. Let's look at some ways to work with CRDTs that provides\nsome guard rails."),"\n",s.createElement(a.hr),"\n",s.createElement(a.h2,null,s.createElement("a",{id:"be-safe"})," 🦺 Safety First: Encapsulate CRDT State"),"\n",s.createElement(a.p,null,"To prevent the kinds of surprises we just saw, CRDT state should be ",s.createElement(a.em,null,"encapsulated"),", using a language that supports strong typing. If ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," is offered, it should be marked as ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">unsafe</code>'}}),"."),"\n",s.createElement(a.p,null,"A compiler ",s.createElement(a.em,null,"might")," allow ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," without ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">unsafe</code>'}})," ",s.createElement(a.em,null,"if")," it can prove all downstream logic is monotonic. But that's rare. Monotonicity is undecidable in general."),"\n",s.createElement(a.p,null,"If you're in Rust, check out ",s.createElement(a.a,{href:"https://hydro.run"},"Hydro"),": we're working on these issues!"),"\n",s.createElement(a.h2,null,"👍 Safe, Practical CRDT Usage: Lower Bounds and Threshold Functions"),"\n",s.createElement(a.p,null,"Are there any functions that can safely examine CRDT state? Yes indeed! Monotonicity to the rescue."),"\n",s.createElement(a.p,null,"Specifically, since the value of a properly-written CRDT should only go up over time, CRDTs give you trustworthy ",s.createElement(a.em,null,"lower bounds"),". Just don't treat a lower bound as a final answer—a lower bound is a special type,\nwhich you can only compare using ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">&lt;=</code>'}}),"! In particular, you can't test for equality (",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">==</code>'}}),") with a lower bound."),"\n",s.createElement(a.p,null,"In addition, ",s.createElement(a.em,null,"you can expose monotone functions on CRDTs")," to safely compute on their evolving state.\nLet's see how."),"\n",s.createElement(a.h3,null,s.createElement("a",{id:"threshold-functions"})," ✅ Thresholds: Coordination-Free Termination"),"\n",s.createElement(a.p,null,"Some lattices are bounded, which means they have a unique top element (",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,{mathvariant:"normal"},"⊤")),s.createElement(a.annotation,{encoding:"application/x-tex"},"\\top")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6944em"}}),s.createElement(a.span,{className:"mord"},"⊤"))))),"). Once you hit ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,{mathvariant:"normal"},"⊤")),s.createElement(a.annotation,{encoding:"application/x-tex"},"\\top")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6944em"}}),s.createElement(a.span,{className:"mord"},"⊤"))))),", you're done! As a classic example, consider the boolean lattice with values ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">{false , true}</code>'}})," and merge function that computes ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mo,null,"∨")),s.createElement(a.annotation,{encoding:"application/x-tex"},"\\vee")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.5556em"}}),s.createElement(a.span,{className:"mord"},"∨")))))," (logical ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">or</code>'}}),")."),"\n",s.createElement(a.p,null,s.createElement(a.strong,null,"Threshold functions")," are boolean functions (i.e. truth predicates) on lattices that exploit this:"),"\n",s.createElement(a.ul,null,"\n",s.createElement(a.li,null,"They map from a big (or unbounded) lattice to the boolean lattice"),"\n",s.createElement(a.li,null,"They are ",s.createElement(a.em,null,"monotone")," functions: as the input gets bigger, the output can never go down -- once ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">true</code>'}}),", always ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">true</code>'}}),"!"),"\n",s.createElement(a.li,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">true</code>'}})," is ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,{mathvariant:"normal"},"⊤")),s.createElement(a.annotation,{encoding:"application/x-tex"},"\\top")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6944em"}}),s.createElement(a.span,{className:"mord"},"⊤")))))," and ",s.createElement(a.em,null,"safe to ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}}))),"\n"),"\n",s.createElement(a.p,null,"Clearly ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">edible</code>'}})," is not a threshold function. What is a good example? Here are two examples on grow-only set lattices: once true, always true!"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="rust"><pre class="language-rust"><code class="language-rust">state<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">;</span>\nstate<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token lifetime-annotation symbol">\'Apple</span> <span class="token class-name">Sauce</span>\'<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"CRDTs and threshold functions can be pretty useful. Even if your full lattice (like a set) has no practical ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,{mathvariant:"normal"},"⊤")),s.createElement(a.annotation,{encoding:"application/x-tex"},"\\top")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6944em"}}),s.createElement(a.span,{className:"mord"},"⊤"))))),", your threshold function does! Once you cross that threshold, you can treat the truth value as a stable boolean value—one that will be eventually consistent across nodes. So you can ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," the output of the threshold function safely."),"\n",s.createElement(a.p,null,"Threshold functions are a common example, but you can safely use any monotone function that maps to any finite,\nordered type!\nBut remember: ",s.createElement(a.em,null,"until")," your monotone function hits ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,{mathvariant:"normal"},"⊤")),s.createElement(a.annotation,{encoding:"application/x-tex"},"\\top")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6944em"}}),s.createElement(a.span,{className:"mord"},"⊤")))))," in your output type, you're still in unsafe territory.\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Read</code>'}}),"s may still change! So threshold functions are only helpful when they become true ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mo,{stretchy:"false"},"("),s.createElement(a.mi,{mathvariant:"normal"},"⊤"),s.createElement(a.mo,{stretchy:"false"},")")),s.createElement(a.annotation,{encoding:"application/x-tex"},"(\\top)")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),s.createElement(a.span,{className:"mopen"},"("),s.createElement(a.span,{className:"mord"},"⊤"),s.createElement(a.span,{className:"mclose"},")"))))),"."),"\n",s.createElement(a.hr),"\n",s.createElement(a.h2,null,"🧭 So What Should Systems Do?"),"\n",s.createElement(a.p,null,"Realistically, many eventually consistent systems need to use some coordination at some point. And in many cases that's OK, especially if we can ",s.createElement(a.em,null,"avoid coordination most of the time"),"! As my colleague ",s.createElement(a.a,{href:"https://nacrooks.github.io/"},"Natacha Crooks"),' said once, "most programs are not monotonic, but most programs are mostly monotonic". So the trick is to put coordination in its place.'),"\n",s.createElement(a.p,null,"Here's some advice as you think about eventual consistency, CRDTs, monotonic programming, and the like:"),"\n",s.createElement(a.p,null,s.createElement(a.strong,null,"1. Coordination is still needed to ",s.createElement(a.em,null,"know")," when you're done."),s.createElement(a.br),"\n","Use it sparingly! For example, when you're pretty sure every node is done with a task or session — maybe because some coordination-free threshold has been met — you can employ a round of consensus to detect termination. (Of course if it fails you may have to wait and try again later.)"),"\n",s.createElement(a.p,null,s.createElement(a.strong,null,"2. Don't trust CRDTs that have non-monotonic ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}}),"s."),s.createElement(a.br),"\n","Non-monotonic ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," methods like that of 2P-sets are ",s.createElement(a.em,null,"unsafe in any context:")," it doesn't matter what you do downstream, the ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," itself exposes you to non-monotonicity and hence race conditions. 2P-sets and their more complicated sibling, OR-sets, are quite troublesome in that respect.\nThe only safe way to use them is to do coordination for each ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}}),"—which probably makes 2P-sets no more efficient\nthan your favorite transactional database!"),"\n",s.createElement(a.p,null,s.createElement(a.strong,null,"3. Embrace strong typing and escape hatches."),"\nCRDT state should be encapsulated, and methods that expose the state should be marked ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">unsafe</code>'}}),". Even if the ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," is monotonic, downstream logic may not be.\nThere are certainly cases where developers will want to take their non-deterministic chances ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}}),"ing the\nstate of a CRDT, and that's their business! But for purposes of maintainability and code review, risky behavior of that sort should be explicitly flagged in code, just like Rust requires us to flag unsafe memory accesses."),"\n",s.createElement(a.p,null,s.createElement(a.strong,null,"4. Monotonic thresholds are your friend."),s.createElement(a.br),"\n","Thresholds and other monotone functions enable safe, observable progress without coordination — ",s.createElement(a.em,null,"if")," you expect to hit ",s.createElement(a.span,{className:"math math-inline"},s.createElement(a.span,{className:"katex"},s.createElement(a.span,{className:"katex-mathml"},s.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},s.createElement(a.semantics,null,s.createElement(a.mrow,null,s.createElement(a.mi,{mathvariant:"normal"},"⊤")),s.createElement(a.annotation,{encoding:"application/x-tex"},"\\top")))),s.createElement(a.span,{className:"katex-html","aria-hidden":"true"},s.createElement(a.span,{className:"base"},s.createElement(a.span,{className:"strut",style:{height:"0.6944em"}}),s.createElement(a.span,{className:"mord"},"⊤"))))),"."),"\n",s.createElement(a.p,null,"In summary, I offer this:"),"\n",s.createElement(a.h3,null,s.createElement("a",{id:"survival-guide"},"CRDT Survival Guide")),"\n",s.createElement(l.A,{type:"success"},s.createElement(a.p,null,s.createElement(a.strong,null,"Safe:")," ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">merge</code>'}})," freely, take advantage of threshold functions.")),"\n",s.createElement(l.A,{type:"warning"},s.createElement(a.p,null,s.createElement(a.strong,null,"Unsafe:")," ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," at your own risk.")),"\n",s.createElement(l.A,{type:"danger"},s.createElement(a.p,null,s.createElement(a.strong,null,"Avoid:")," Non-monotonic reads like in 2P-sets.")),"\n",s.createElement(l.A,{type:"info"},s.createElement(a.p,null,s.createElement(a.strong,null,"Pro Tip:")," Treat CRDT state like a radioactive material—encapsulate it, mark ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">read</code>'}})," as unsafe.")),"\n",s.createElement(a.hr),"\n",s.createElement(a.h2,null,"🧠 Want More?"),"\n",s.createElement(a.p,null,"If you're looking for formal research in this space that goes beyond the main CALM Theorem papers, check out these more recent results:"),"\n",s.createElement(a.ul,null,"\n",s.createElement(a.li,null,"Conor Power's recent theoretical work on ",s.createElement(a.a,{href:"https://drops.dagstuhl.de/storage/00lipics/lipics-vol328-icdt2025/LIPIcs.ICDT.2025.32/LIPIcs.ICDT.2025.32.pdf"},"Free Termination in ICDT 25")," goes beyond thresholds\nto identify more cases where you can terminate without coordination."),"\n",s.createElement(a.li,null,"Be aware that researchers have found extensions to the CALM theorem, where global knowledge can allow coordination-free computation in more cases.\nThe most recent paper in this line of work is from our friends Tim Baccaert and Bas Ketsman in a ",s.createElement(a.a,{href:"https://dl.acm.org/doi/10.1145/3584372.3588657"},"PODS 2023")," paper."),"\n",s.createElement(a.li,null,"For original research on threshold functions, see Kuper and Newton's ",s.createElement(a.a,{href:"https://dl.acm.org/doi/10.1145/2502323.2502326"},"LVars"),"."),"\n"),"\n",s.createElement(a.p,null,"...and stay tuned for the next post on CRDTs' algebraic properties."))}var r=function(e){void 0===e&&(e={});const{wrapper:a}=Object.assign({},(0,n.RP)(),e.components);return a?s.createElement(a,e,s.createElement(m,e)):m(e)},o=t(2532),i=t(4967),p=t(3895),u=t(7528),h=t(6163);const E=e=>{var a;let{data:t,location:n,children:l}=e;const m=t.mdx,r=(null===(a=t.site.siteMetadata)||void 0===a?void 0:a.title)||"Title",u=(0,o.c)(m.frontmatter.coverImage),E=m.frontmatter.coverImageCaption;return s.createElement(p.A,{location:n,title:r},s.createElement("article",{className:"blog-post",itemScope:!0,itemType:"http://schema.org/Article"},s.createElement("header",null,s.createElement("h1",{className:"blog-post-title",itemProp:"headline"},m.frontmatter.title),s.createElement("p",null,m.frontmatter.date," • ",m.fields.readingTime),u&&s.createElement("div",{style:{width:"30%",float:"right",marginLeft:"2rem",marginBottom:"2rem",background:"#fafaff",border:"1px solid #eee",borderRadius:"8px",boxShadow:"0 2px 8px rgba(0,0,0,0.04)",padding:"1rem"}},s.createElement(o.G,{image:u,alt:m.frontmatter.title,style:{width:"100%",borderRadius:"4px",marginBottom:E?"0.5rem":"0"}}),E&&E.trim()&&s.createElement("figcaption",{className:"cover-image-caption",style:{textAlign:"left",color:"#666",fontSize:"0.85rem",lineHeight:"1.4",margin:"0"},dangerouslySetInnerHTML:{__html:E}}))),s.createElement("section",{className:"content",itemProp:"articleBody"},l),s.createElement("hr"),s.createElement("footer",null,s.createElement(i.A),s.createElement(h.A))),s.createElement("nav",{className:"blog-post-nav"},s.createElement("ul",{style:{display:"flex",flexWrap:"wrap",justifyContent:"space-between",listStyle:"none",padding:0}},s.createElement("li",null,t.previous&&s.createElement(c.Link,{to:t.previous.fields.slug,rel:"prev"},"← ",t.previous.frontmatter.title)),s.createElement("li",null,t.next&&s.createElement(c.Link,{to:t.next.fields.slug,rel:"next"},t.next.frontmatter.title," →")))))},d=e=>{let{data:a}=e;return s.createElement(u.A,{title:a.mdx.frontmatter.title,description:a.mdx.frontmatter.description||a.mdx.excerpt})};function g(e){return s.createElement(E,e,s.createElement(r,e))}}}]);
//# sourceMappingURL=component---src-templates-blog-post-js-content-file-path-content-blog-crdt-dont-read-index-mdx-4e84fddca3dc098a46d9.js.map